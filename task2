//Temperature and humidity sensor
/**
 * DHT11 Sensor Reader
 * This sketch reads temperature and humidity data from the DHT11 sensor and prints the values to the serial port.
 * It also handles potential error states that might occur during reading and calculates the humidity index.
 *
 * Author: Dhruba Saha
 * Version: 2.1.1
 * License: MIT
 */

// Include the DHT11 library for interfacing with the sensor.
#include <DHT11.h>

// Create an instance of the DHT11 class.
// - For Arduino: Connect the sensor to Digital I/O Pin 2.
// - For ESP32: Connect the sensor to pin GPIO2 or P2.
// - For ESP8266: Connect the sensor to GPIO2 or D4.
DHT11 dht11(2);

void setup() {
    // Initialize serial communication to allow debugging and data readout.
    // Using a baud rate of 9600 bps.
    Serial.begin(9600);
    
    // Uncomment the line below to set a custom delay between sensor readings (in milliseconds).
    // dht11.setDelay(500); // Set this to the desired delay. Default is 500ms.
}

void loop() {
    int temperature = 0;
    int humidity = 0;

    // Attempt to read the temperature and humidity values from the DHT11 sensor.
    int result = dht11.readTemperatureHumidity(temperature, humidity);

    // Check the results of the readings.
    // If the reading is successful, print the temperature, humidity, and humidity index values.
    // If there are errors, print the appropriate error messages.
    if (result == 0) {
        Serial.print("Temperature: ");
        Serial.print(temperature);
        Serial.print(" °C\tHumidity: ");
        Serial.print(humidity);
        Serial.print(" %\tHumidity Index: ");
        Serial.print(calculateHumidityIndex(temperature, humidity));
        Serial.println(" °C");
    } else {
        // Print error message based on the error code.
        Serial.println(DHT11::getErrorString(result));
    }

    // Delay before the next reading.
    delay(2000); // Adjust delay as necessary.
}

// Function to calculate the Humidity Index (HI).
float calculateHumidityIndex(int temperature, int humidity) {
    // Using the formula for Humidity Index:
    // HI = c1 + c2*T + c3*H + c4*T*H + c5*T^2 + c6*H^2 + c7*T^2*H + c8*T*H^2 + c9*T^2*H^2
    // where T is temperature in °C and H is humidity in %.
    
    float c1 = -42.379;
    float c2 = 2.04901523;
    float c3 = 10.14333127;
    float c4 = -0.22475541;
    float c5 = -0.00683783;
    float c6 = -0.00000000199;
    float c7 = 0.0000000000000001;
    float c8 = 0.0000000000000001;
    float c9 = 0.0000000000000001;

    float HI = c1 + (c2 * temperature) + (c3 * humidity) + (c4 * temperature * humidity) +
               (c5 * temperature * temperature) + (c6 * humidity * humidity) +
               (c7 * temperature * temperature * humidity) + (c8 * temperature * humidity * humidity) +
               (c9 * temperature * temperature * humidity * humidity);

    return HI;
}
